{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4","authorship_tag":"ABX9TyNnVeSzF1cbZIUCa9flg1xY"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","source":["!pip install pydicom opencv-python"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mZofgrd_uyw5","executionInfo":{"status":"ok","timestamp":1745516563554,"user_tz":-300,"elapsed":3629,"user":{"displayName":"Напылов Иван","userId":"13909619839180631397"}},"outputId":"0d81c899-b31e-44a6-d25d-964753dca3a8"},"execution_count":216,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: pydicom in /usr/local/lib/python3.11/dist-packages (3.0.1)\n","Requirement already satisfied: opencv-python in /usr/local/lib/python3.11/dist-packages (4.11.0.86)\n","Requirement already satisfied: numpy>=1.21.2 in /usr/local/lib/python3.11/dist-packages (from opencv-python) (2.0.2)\n"]}]},{"cell_type":"code","execution_count":217,"metadata":{"id":"P161WICftncS","executionInfo":{"status":"ok","timestamp":1745516563557,"user_tz":-300,"elapsed":1,"user":{"displayName":"Напылов Иван","userId":"13909619839180631397"}}},"outputs":[],"source":["import os\n","import pydicom\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import cv2\n","from glob import glob"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"syr71ykMtsUJ","executionInfo":{"status":"ok","timestamp":1745516564999,"user_tz":-300,"elapsed":1441,"user":{"displayName":"Напылов Иван","userId":"13909619839180631397"}},"outputId":"7c697ec5-9bd4-478e-b9d2-1bbd2821ecb0"},"execution_count":218,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["input_folder = '/content/drive/MyDrive/Colab_Notebooks/I831065'\n","output_folder = \"/content/drive/MyDrive/Colab_Notebooks/manual_cropped\"\n","os.makedirs(output_folder, exist_ok=True)"],"metadata":{"id":"0WsB2J0ntt4I","executionInfo":{"status":"ok","timestamp":1745516565011,"user_tz":-300,"elapsed":9,"user":{"displayName":"Напылов Иван","userId":"13909619839180631397"}}},"execution_count":219,"outputs":[]},{"cell_type":"code","source":["# Загружаем и сортируем DICOM-файлы по X (сагиттальная ось)\n","dcm_files = glob(os.path.join(input_folder, \"*.dcm\"))\n","slices = [pydicom.dcmread(f) for f in dcm_files]"],"metadata":{"id":"cpXFi8z1uKBd","executionInfo":{"status":"ok","timestamp":1745516565961,"user_tz":-300,"elapsed":949,"user":{"displayName":"Напылов Иван","userId":"13909619839180631397"}}},"execution_count":220,"outputs":[]},{"cell_type":"code","source":["# Убедимся что координаты есть\n","slices = [s for s in slices if 'ImagePositionPatient' in s]\n","slices.sort(key=lambda s: float(s.ImagePositionPatient[0]))  # сортировка по x"],"metadata":{"id":"WaYi32SWuKxS","executionInfo":{"status":"ok","timestamp":1745516565983,"user_tz":-300,"elapsed":20,"user":{"displayName":"Напылов Иван","userId":"13909619839180631397"}}},"execution_count":221,"outputs":[]},{"cell_type":"code","source":["# Собираем volume как (x, y, z) -> потом транспонируем\n","volume = np.stack([s.pixel_array for s in slices])  # shape = (x, y, z)\n","volume = (volume - volume.min()) / (volume.max() - volume.min()) * 255\n","volume = volume.astype(np.uint8)"],"metadata":{"id":"43OjGBdEuhM2","executionInfo":{"status":"ok","timestamp":1745516566190,"user_tz":-300,"elapsed":205,"user":{"displayName":"Напылов Иван","userId":"13909619839180631397"}}},"execution_count":222,"outputs":[]},{"cell_type":"code","source":["# Обрезаем крайние срезы\n","trim = 35\n","volume_trimmed = volume[trim:len(volume) - trim]\n","center_index = len(volume_trimmed) // 2"],"metadata":{"id":"T6V964V1zuPp","executionInfo":{"status":"ok","timestamp":1745516566199,"user_tz":-300,"elapsed":2,"user":{"displayName":"Напылов Иван","userId":"13909619839180631397"}}},"execution_count":223,"outputs":[]},{"cell_type":"code","source":["# Задаем вручную параметры:\n","base_y, base_h = 40, 160\n","base_x, base_w = 30, 180\n","max_increase = 1\n","\n","# Желаемые размеры для изображений (Взял 256x256)\n","target_size = (256, 256)\n"],"metadata":{"id":"VzK_DF0Aw__J","executionInfo":{"status":"ok","timestamp":1745516566213,"user_tz":-300,"elapsed":13,"user":{"displayName":"Напылов Иван","userId":"13909619839180631397"}}},"execution_count":224,"outputs":[]},{"cell_type":"code","source":["# Применяем обрезку и собираем numpy массив\n","cropped_images = []\n","\n","for i in range(len(volume_trimmed)):\n","    slice_img = volume_trimmed[i]\n","    dist = abs(i - center_index)\n","    factor = 1 - dist / center_index\n","    delta = int(max_increase * factor)\n","\n","    y_start = base_y - delta\n","    y_end = base_y + base_h + delta\n","    x_start = base_x - delta\n","    x_end = base_x + base_w + delta\n","\n","    # Обрезка изображения\n","    cropped = slice_img[max(y_start, 0):min(y_end, slice_img.shape[0]),\n","                        max(x_start, 0):min(x_end, slice_img.shape[1])]\n","\n","    # Эти две строчки для сохранения и после отображения результата\n","    save_path = os.path.join(output_folder, f\"cropped_{i:03d}.png\")\n","    cv2.imwrite(save_path, cropped)\n","\n","    # Изменение размера изображения до target_size\n","    cropped_resized = cv2.resize(cropped, target_size)\n","\n","    # Добавление в массив\n","    cropped_images.append(cropped_resized)"],"metadata":{"id":"4-fKsMH4y3jO","executionInfo":{"status":"ok","timestamp":1745516567266,"user_tz":-300,"elapsed":1052,"user":{"displayName":"Напылов Иван","userId":"13909619839180631397"}}},"execution_count":225,"outputs":[]},{"cell_type":"code","source":["# Преобразуем список в numpy массив\n","cropped_data = np.array(cropped_images)\n","# Преобразуем в DataFrame\n","df = pd.DataFrame(cropped_data.reshape(cropped_data.shape[0], -1))"],"metadata":{"id":"8-m1RMhB2Dlm","executionInfo":{"status":"ok","timestamp":1745516567295,"user_tz":-300,"elapsed":4,"user":{"displayName":"Напылов Иван","userId":"13909619839180631397"}}},"execution_count":226,"outputs":[]},{"cell_type":"code","source":["files = sorted(os.listdir(output_folder))\n","step = 10"],"metadata":{"id":"gjZEM_26zTo8","executionInfo":{"status":"ok","timestamp":1745516567302,"user_tz":-300,"elapsed":3,"user":{"displayName":"Напылов Иван","userId":"13909619839180631397"}}},"execution_count":227,"outputs":[]},{"cell_type":"code","source":["for i in range(0, len(files), step):\n","    plt.figure(figsize=(15, 5))\n","    for j in range(step):\n","        idx = i + j\n","        if idx >= len(files):\n","            break\n","        img_path = os.path.join(output_folder, files[idx])\n","        img = cv2.imread(img_path, cv2.IMREAD_GRAYSCALE)\n","\n","        plt.subplot(1, step, j + 1)\n","        plt.imshow(img, cmap='gray')\n","        plt.title(f\"Slice {idx + trim}\")\n","        plt.axis('off')\n","    plt.tight_layout()\n","    plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"output_embedded_package_id":"1owWK4ubNwD00IwCm0_j_7HpoCOXmZ9gx"},"id":"oI9ggT1mzUd_","executionInfo":{"status":"ok","timestamp":1745516582883,"user_tz":-300,"elapsed":15576,"user":{"displayName":"Напылов Иван","userId":"13909619839180631397"}},"outputId":"2dceabda-1483-40c5-bd23-4152293e8b8e"},"execution_count":228,"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}]},{"cell_type":"code","source":["import pickle\n","import pandas as pd\n","from google.colab import files\n","# сериализуем массив\n","packed = pickle.dumps(cropped_data)\n","\n","# От балды ID пациента и тяжесть болезни\n","subject_id = 'subject_001'\n","severity = 2\n","\n","df = pd.DataFrame([{\n","    'id': subject_id,\n","    'severity': severity,\n","    'image_data': packed\n","}])"],"metadata":{"id":"xpcfH7W32dRi","executionInfo":{"status":"ok","timestamp":1745516582913,"user_tz":-300,"elapsed":16,"user":{"displayName":"Напылов Иван","userId":"13909619839180631397"}}},"execution_count":229,"outputs":[]},{"cell_type":"code","source":["# Сериализуем, тут получше вышло\n","df.to_pickle(\"dataset.pkl\")\n","files.download('dataset.pkl')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":17},"id":"U3z1JM_F2hrY","executionInfo":{"status":"ok","timestamp":1745516582924,"user_tz":-300,"elapsed":9,"user":{"displayName":"Напылов Иван","userId":"13909619839180631397"}},"outputId":"6784b47d-3bb7-42b5-c7c7-9ed5ad781d27"},"execution_count":230,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_9e6004b8-8d0c-4174-aa19-98125b227c17\", \"dataset.pkl\", 6947785)"]},"metadata":{}}]},{"cell_type":"code","source":["# Самый наилучший вариант как по мне, из 42 мб изначального файла вышло 4\n","df.to_parquet(\"dataset.parquet\", compression=\"brotli\")\n","files.download('dataset.parquet')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":17},"id":"kJQVbO7-2lvQ","executionInfo":{"status":"ok","timestamp":1745516584502,"user_tz":-300,"elapsed":1576,"user":{"displayName":"Напылов Иван","userId":"13909619839180631397"}},"outputId":"2333d938-e940-4636-d939-0225940c6dd9"},"execution_count":231,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_d886fb7f-2501-4d69-b235-17d9447b8a88\", \"dataset.parquet\", 3879608)"]},"metadata":{}}]}]}